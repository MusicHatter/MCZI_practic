import pyshark
import mysql.connector

from pylibpcap.pcap import rpcap
from mysql.connector import MySQLConnection, Error


#Создание подключения
def create_connection(host_name, user_name, user_password, db_name):
    connection = None
    try:
        connection = mysql.connector.connect(
            host=host_name,
            user=user_name,
            passwd=user_password,
            database=db_name
        )
        print("Connection to MySQL DB successful")
    except Error as e:
        print(f"The error '{e}' occurred")

    return connection

#Создание БД
#def create_database(connection, query):
    #cursor = connection.cursor()
    #try:
        #cursor.execute(query)
        #print("Database created successfully")
    #except Error as e:
        #print(f"The error '{e}' occurred")

connection = create_connection("localhost", "root", "123", "laba1")
    
#create_database(connection, create_database_query)

#Подключение файла
cap = pyshark.FileCapture('malware_traffic.pcap')

cnx = connection
cursor = cnx.cursor()


#Перебор и загрузка в БД
i = 0
for idx, packet in enumerate(cap):
    id = cap[i].number
    len = cap[i].length
    try:
        ip_src = cap[i].ip.src
    except AttributeError:
        ip_src = cap[i].eth.src
    try:
        ip_dst = cap[i].ip.dst
    except AttributeError:
        ip_dst = cap[i].eth.dst   
    layer = cap[i].highest_layer
    #eth_src = cap[i].eth.addr мак-адрес
    #eth_dst = cap[i].eth.dst мак-адрес
    try:
        port_src = cap[i].tcp.srcport
    except AttributeError:
        try:
            port_src = cap[i].udp.srcport
        except AttributeError:
            port_src = ''
    try:
        port_dst = cap[i].tcp.dstport
    except AttributeError:
        try:
           port_dst = cap[i].udp.dstport  
        except AttributeError:
            port_dst = ''  
    time = cap[i].frame_info.time_relative
    
    eth_type = cap[i].eth.type

    add_employee = ("INSERT INTO laba_table VALUES (%r, %r, %r, %r, %r, %r, %r, %r, %r)" %(id, len, ip_src, ip_dst, layer, port_src, port_dst, eth_type, time))
    cursor.execute(add_employee)
    i += 1

#Завершение
cnx.commit()

cursor.close()
cnx.close()
